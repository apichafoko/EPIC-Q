#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function setupEmailConfig() {
  console.log('üîß Configuraci√≥n de Email para Gmail');
  console.log('=====================================\n');
  
  console.log('üìã Pasos previos necesarios:');
  console.log('1. Habilitar autenticaci√≥n de 2 factores en tu cuenta de Gmail');
  console.log('2. Generar una contrase√±a de aplicaci√≥n:');
  console.log('   - Ve a: https://myaccount.google.com/security');
  console.log('   - Busca "Contrase√±as de aplicaciones"');
  console.log('   - Genera una nueva contrase√±a para "EPIC-Q Management"');
  console.log('   - Copia la contrase√±a generada (16 caracteres)\n');
  
  const email = await question('üìß Ingresa tu email de Gmail: ');
  const appPassword = await question('üîë Ingresa la contrase√±a de aplicaci√≥n (16 caracteres): ');
  
  if (!email || !appPassword) {
    console.log('‚ùå Error: Email y contrase√±a son requeridos');
    process.exit(1);
  }
  
  if (appPassword.length !== 16) {
    console.log('‚ö†Ô∏è  Advertencia: La contrase√±a de aplicaci√≥n debe tener 16 caracteres');
  }
  
  // Leer el archivo .env.local actual
  const envPath = path.join(__dirname, '..', '.env.local');
  let envContent = '';
  
  if (fs.existsSync(envPath)) {
    envContent = fs.readFileSync(envPath, 'utf8');
  }
  
  // Actualizar las variables de email
  const emailConfig = `# ===========================================
# CONFIGURACI√ìN DE LA APLICACI√ìN
# ===========================================

NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=tu-secret-key-aqui

# ===========================================
# CONFIGURACI√ìN DE EMAIL (GMAIL)
# ===========================================

# Configuraci√≥n SMTP para Gmail
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=${email}
EMAIL_PASS=${appPassword}
EMAIL_FROM=EPIC-Q System <${email}>
EMAIL_FROM_NAME=EPIC-Q Management System

# Configuraci√≥n de seguridad
EMAIL_SECURE=false
EMAIL_TLS=true

# Configuraci√≥n de templates
EMAIL_TEMPLATES_ENABLED=true
DEFAULT_INVITATION_TEMPLATE=user_invitation
DEFAULT_PASSWORD_RESET_TEMPLATE=password_reset

# ===========================================
# CONFIGURACI√ìN DE BASE DE DATOS
# ===========================================

# Usar la configuraci√≥n existente si existe
DATABASE_URL=postgresql://postgres:password@localhost:5432/epicq_db?schema=public
`;

  // Escribir el archivo .env.local
  fs.writeFileSync(envPath, emailConfig);
  
  console.log('\n‚úÖ Configuraci√≥n de email actualizada');
  console.log(`üìß Email: ${email}`);
  console.log('üîë Contrase√±a de aplicaci√≥n: [CONFIGURADA]');
  console.log('\nüìù Archivo actualizado: .env.local');
  console.log('\nüîÑ Reinicia el servidor para aplicar los cambios:');
  console.log('   npm run dev');
  
  rl.close();
}

setupEmailConfig().catch(console.error);
